function stereo_camera_calibration_parameters_opencv(filepath, stereoParams, baseline)
    %extract and reformat stereo params
    cameraMatrix1 = transpose(stereoParams.CameraParameters1.IntrinsicMatrix);
    cameraDistortionVector1 = [stereoParams.CameraParameters1.RadialDistortion(1),...
                               stereoParams.CameraParameters1.RadialDistortion(2),...
                               stereoParams.CameraParameters1.TangentialDistortion(1),...
                               stereoParams.CameraParameters1.TangentialDistortion(2),...
                               stereoParams.CameraParameters1.RadialDistortion(3)];
    cameraMatrix2 = transpose(stereoParams.CameraParameters2.IntrinsicMatrix);
    cameraDistortionVector2 = [stereoParams.CameraParameters2.RadialDistortion(1),...
                               stereoParams.CameraParameters2.RadialDistortion(2),...
                               stereoParams.CameraParameters2.TangentialDistortion(1),...
                               stereoParams.CameraParameters2.TangentialDistortion(2),...
                               stereoParams.CameraParameters2.RadialDistortion(3)];
    rotationMatrix = transpose(stereoParams.RotationOfCamera2);
    if(baseline ~= -1)
        translationVector = [-baseline, stereoParams.TranslationOfCamera2(2), stereoParams.TranslationOfCamera2(3)];
        S = [0., translationVector(3), -translationVector(2);
             -translationVector(3), 0., translationVector(1);
             translationVector(2), -translationVector(1), 0.];

        essentialMatrix = stereoParams.RotationOfCamera2 * S;
        TessentialMatrix = transpose(essentialMatrix);
        %fundamentalMatrix = cameraMatrix2^-T * E * cameraMatrix1^-1
        fundamentalMatrix = transpose(transpose(inv(cameraMatrix2)) * TessentialMatrix * inv(cameraMatrix1));
    else
        translationVector = stereoParams.TranslationOfCamera2;
        essentialMatrix = transpose(stereoParams.EssentialMatrix);
        fundamentalMatrix = transpose(stereoParams.FundamentalMatrix);
    end
    
    %Output calibration params
    stereo_camera_parameters_export(filepath,...
                                    cameraMatrix1, cameraDistortionVector1,...
                                    cameraMatrix2, cameraDistortionVector2,...
                                    rotationMatrix, translationVector,...
                                    essentialMatrix, fundamentalMatrix);
end